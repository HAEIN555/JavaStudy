package study;
/* 상속시 주의 사항 
 * - 상위 상클래스에서 선언된 멤버 변수와 하위 클래스에서 선언된 멤버변수가 같으면 
 * 		상위 클래스의 멤버변수(클래스의 속성과 기능 그리고 이것은 변수와 매서드)가 무시 됩니다. 
 * 		이때 상위 클래스의 멤버변수를 사용하기 위해서는 super라는 키워드를 이용함 
 * 
 *  - 동일한 이름의 멤버변수나 동일한 이름의 메소드가 한 클래스 안에 정의 되는 경우에는 에러가 발생!
 *  	(중복되는거...?)
 *  
 */
// 부모 클래스 
class SuperTest {
	protected double area;
	private String title;// 전역변수 
	
	public SuperTest() {// 부모의 생성자 
		System.out.println("Super Test().. 인자가 없는 생성자");
	}
	public SuperTest(String title/*지역변수*/) {// 생성자 메소드 
		this.title=title; 
	}
	public void write() {
		System.out.println(title+" "+area);
	}
}
// 자식 클래스   상속관계! !
class Rect extends SuperTest{
	/*
	 * protected double area; public void write() {
	 * System.out.println(title+" "+area); }
	   상속받아서 들어와있는 것들*/
	
	private int w,h; // w - width h-height
	public Rect() {
		//super();
		// 를 통해서 부모를 호출  부모의 생성자를 이야기 한다면 super
		
	}
	
	//연산 메소드 구현
	public void calc(int w,int h) {
		this. w = w;
		this. h = h;
		area =(double) this.w*this.h;
		write();
	}
	
	
	@Override
	public void write() {
			System.out.println("w :"+w+"h :"+h);
			System.out.println("사각형의 넓이는 : "+area);
		// 매개변수와 메소드의 이름 반환형이 동일해야한다. 
		// TODO Auto-generated method stub
		//super.write(); // 부모가 가지고 오는 
	} // ctrl space눌러서  write메소드를 가지고 온다. 
	/* 메소드 오버 라이딩 
	 * 상위 (부모 ) 클래스를 상속 받은 하위 클래스에서 상위 클래스에 
	 * 정의 된 메소드를 재정의 하는 것을 의미한다.
	 * 객체지향 프로그램의 특징 - 다형성을 나타낸다
	 *  재정의란? 반드시 상속관계에 있어야하며, 메소드 이름 리턴타입,매개변수의 개수나 타입이
	 *  완전히 일치해야한다. 
	 */
}
class Circle extends SuperTest{
	
	public Circle(String title){
		super(title);
	}
	public void calc(int r) {
		area = r*r*3.141592;//protected double area; 부모에 이게 있어서 
		write(); // 부모의 것 
		
	}
}


public class InherEX01 {

	public static void main(String[] args) {
		Rect r = new Rect();// 부모의 생성자가 없다면 에러가 난다. 비어있는 기본생성자를 만들어주어야함!
		
		Circle c= new Circle("원의 넓이 : ");
		r.calc(10, 5);
		c.calc(30);
		
		
		
	}

}
