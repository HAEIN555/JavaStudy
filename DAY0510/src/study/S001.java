package study;
public class S001 {
	public static void main(String[] args) {
		/* 배열을 왜 사용하는가? 배열을 사용하면서 많은 데이터를 사용할 수 있다.
		 *  수 많은 데이터를 사용할 수 있는 공간을 저장하기 위해...? 
		 *  배열보다 큰차원 - 컬렉션
		 *  1차원 배열의 기준 - 행 ,2차원은 행과 열이 늘어난다.
		 *  3차원 기준 - 절차지향 (구조적인) 
		 *  객체지향 컬렉션 - 자료구조를 모아둔거...? vector list set Map
		 *  가변배열 - 변의 길이를 조절 할 수 있다
		 *   
		 *   배열이란 - 크기와 성격이 같은 일련의 원소들이 모여 공동의 집합 구조를 
		 *   갖는 자료의 집합체를 의미하는 것으로 동질적인 성격을 가진 자료들에 대해 
		 *   개별적으로 자료형을 부여하지 않고 하나의 이름을 가지고 처리할 목적으로 
		 *   사용한다.
		 *   자바에서의 배열 - 다음과 같은 순서에 의해 사용된다. 
		 *  1. 배열선언  2. 배열에 메모리 할당 3. 배열요소의 이용 (순서,첨자index0부터)
		 *  
		 *  1차원 배열의 형식 및  구조
		 *  배열 선언
		 *  자료형 [] 변수명(배열명)
		 *  변수명 = new 자료형 [요소의 크기]
		 *  값 대입 --> 변수명 [index]
		 */
		
		//배열선언
		int [] arr;// 정수형 밖에 올 수 없다.
		// 메모리 할당 
		arr = new int [10];
		// 배열은 선언과 동시에 초기화가 가능하다 .
		// 메모리를 할당할 때도 초기화가 가능하다.
		// 합쳐서 표시해 보자
		int [] arrr = new int [] {1,2,3,4,5,6,7,8,9,0};// 배열선언과 메모리 할당 가능!
		
		 
		//int []arrrr = {1,2,3,4,5,6,7,8,9,0}; // 이렇게도 표시 가능하다! 
		//int []arr = new int []  {1,2,3,4,5,6,7,8,9,0}; 이렇게도 표시할 수 있다. 
		
		// 배열 요소 사용 (접근) -> 값을 집어 넣는다.
		arr[0]=1;
		arr[1]=2;
		arr[2]=3;
		// 배열은 그자료형에 의해서 남은 것들이 초기화가 된다!
		
		// 값을 할당하지 않은 나머지 배열 공간은 자동으로 초기화 된다. ->0으로!(그 자료형에 맞게)
		
		// 배열에 저장되어있는 데이터(요소)의 값 출력 
		System.out.println("arr[0]"+arr[0]);
		System.out.println("arr[1]"+arr[1]);
		System.out.println("arr[2]"+arr[2]);
		System.out.println("arr[3]"+arr[3]);
		
		//System.out.println("arr[10]"+arr[10]);
		// 배열의 범위를 넘어서 출력했다면 범위를 잘못넣었다고 생각! 10개의 공간 0-9까지 임으로 
		// 오류가 뜰때에는 api 참고해서 찾아보세요! https://docs.oracle.com/javase/8/docs/api/
		
		// 반복문을 활용해서 배열에 저장된 데이터들을 출력하자
		for (int i =0;i <10;i++ ) {
			System.out.printf("%2d\n",arr[i]);
		}
		// 1차원 배열이다!
		int c =10;
		int a = 1;
		arr= new int[c];
		arr[0]=1;
		arr[1]=2;
		arr[2+a]=3;
		System.out.println("arr[2+a]"+arr[2+a]);
		// 이렇게도 표시 가능 
		
		System.out.println();
		for  (int temp : arr) {
			System.out.println(temp);// 위에 있는 것도 나오지만 아래 있는 것도 나온다..!
			// 교과서 166 참고 
			
		}
		
	}

}
