package study;

public class S002 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		/* 메소드 오버라이딩 = 자식클래스가 부모 클래스의 메소드를 자신의 필요에 맞추어서 재정의하는 것이다. 이때
		 * 메소드 이름이나 매개변수, 반환형은 동일하여야 한다. 
		 * 오버 라이딩과 오버로딩이 헷갈리니까 정의에 대해서 잘 알아두자 
		 *  * @Override 어노테이션 - 자동선택기능!
		 *  super가 나오는건 상속관계일때! 사용
		 *   키워드 super는 상속 관계에서 부모클래스의 메소드나 필드를 명시적으로 참조하기 위해서
		 *    --- 한줄 있는데 ppt에서 참고하세요!
		 *    
		 *    오버로딩과 오버라이딩의 차이 
		 *    오버로딩 같은 메소드 명을 가진 여러개의 메소드를 작성하는 것
		 *    오버 라이딩은 부모클래스의 메소드를 자식클래스가 다시 정의하는 것 
		 *    단 반환형과 매개변수는 일치해야한다. 
		 * 
		 * 		다형성 - 객체들의 타입이 다르면 똑같은 메세지가 전달되더라도 서로 다른 동작을 하는 것
		 * 		동일한 코드로 다양한 타입의 객체를 처리할 수 있는 기법 
		 * 		업 캐스팅 -  객체에 대한 개념 상속관계에서 일어날 수 있음 
		 * 					    부모클래스 변수로 자식클래스 객체를 참조할 수 있다. 이것을 
		 * 						업캐스팅 (upcasting ,상형 형변환) 이라고 한다. 
		 * 						업캐스팅은 부모가 자식을 가지고 만들 수 있다.
		 *  					객체를 변환할때 casting 자료형을 변환할때는 형변환!
		 *  	업캐스팅 = 자식 객체를 부모 참조 변수로 참조하는 것이다. 업캐스팅은 묵시적으로 수행할 수 있다. 
		 *  	업캐스팅을 사용하면 부모클래스의 멤버에 접근할 수 있지만 자식클래스의 멤버에 접근할 수 없다. 
		 *  	자식것으로 부모것을 만들 수 없다?인건가..
		 *  	업캐스팅 = 자식객체를 부모객체로 형변환
		 *  	parent p = new child();
		 *  	다운캐스팅 = 부모 객체를 자식객체로 형변환
		 *  	child c =(child)p; 
		 * 
		 */
	}

}
